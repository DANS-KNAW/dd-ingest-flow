@startuml

participant DepositIngestTask
participant BlockedTaskService
participant DansBagValidator
boundary "dd-validate-dans-bag (http)" as DDValidate
participant ManifestWriter
participant DatasetMetadataMapper
participant DatasetEditor
participant DataverseService
participant DepositManager
participant EventWriter
participant DataverseClient

DepositIngestTask -> EventWriter: writeEvent

== Validation ==
DepositIngestTask -> BlockedTaskService: is this deposit blocked?
DepositIngestTask <-- BlockedTaskService: true or false
DepositIngestTask -> DansBagValidator: validateBag()
DansBagValidator -> DDValidate: POST /validate
DansBagValidator <-- DDValidate: ValidateOk response
DansBagValidator ---> DepositIngestTask: Validation result (including local checks)


== Data prep ==
DepositIngestTask -> ManifestWriter: write SHA-1 manifest if required

DepositIngestTask -> DatasetMetadataMapper ++:  toDataverseDataset()
note right
    The data prep should be done
    before the DepositIngestTask is
    created, and is part of the deposit
end note
return new Dataset

== Modifying dataset ==

DepositIngestTask -> DatasetEditor ++: performEdit()
    DatasetEditor -> DataverseService: update metadata
        DataverseService -> DataverseClient: update metadata
        DataverseService -> DataverseClient: update file metadata
        DataverseClient --> DataverseService: persistent ID
    DataverseService --> DatasetEditor: persistent ID

    DatasetEditor -> DataverseService: publish dataset
        DataverseService -> DataverseClient: wait for released state
        DataverseService -> DataverseClient: get metadata
        DataverseClient --> DataverseService: urn and doi
        DataverseService --> DatasetEditor: urn and doi
return Dataset create or update result

== Finalizing ==
DepositIngestTask -> EventWriter: writeEvent
DepositIngestTask -> DepositIngestTask: update dataset with dataset result
DepositIngestTask -> DepositManager: update and move deposit
    DepositManager -> Files: move directory


@enduml
